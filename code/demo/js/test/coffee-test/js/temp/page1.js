// Generated by CoffeeScript 1.7.1

/*
ç±»
 */

(function() {
  var Animal, Pig, Snake, index, sam, tom,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Animal = (function() {
    function Animal(name) {
      this.name = name;
      console.log(this.name + " was born.");
    }

    Animal.prototype.say = function(word) {
      return console.log(this.name + (" say " + word + "."));
    };

    return Animal;

  })();


  /*
  $import("module/animal.coffee");
   */

  Snake = (function(_super) {
    __extends(Snake, _super);

    function Snake() {
      return Snake.__super__.constructor.apply(this, arguments);
    }

    Snake.prototype.say = function(word) {
      return console.log(this.name + (" say zizizi. He can\'t say " + word + "."));
    };

    return Snake;

  })(Animal);


  /*
  $import("module/animal.coffee");
   */

  Pig = (function(_super) {
    __extends(Pig, _super);

    function Pig() {
      return Pig.__super__.constructor.apply(this, arguments);
    }

    return Pig;

  })(Animal);

  index = "This is index.";

  console.log(index);


  /*
  $import("module/snake.coffee");
  $import("module/pig.coffee");
   */

  tom = new Snake("Tommy Python");

  sam = new Pig("Sammy Pig");

  tom.say("lalala");

  sam.say("lelele");

}).call(this);
